[{"authors":["admin"],"categories":null,"content":"I am a PhD student in the Theoretical Computer Science group at the University of Birmingham. My supervisors are Noam Zeilberger and Paul Levy. My research interests mainly involve category theory, logic and their applications.\nI graduated from the Master in Mathematical Logic and Foundations of Computer Science at the Paris Diderot University. During this period I did a five-month internship under the supervision of Benoît Valiron on the syntax and semantics of a linear probabilistic $\\lambda\\mu$-calculus. Then I was using formal methods as a software engineer and safety engineer at Clearsy for almost two years. More recently I did a research internship at Riverlane about the specification and verification of dataflow programs.\nDuring my PhD I have been investigating bifibred polycategories to provide models of refinements of classical multiplicative linear logic. This has lead to a publication.\nLately I have been looking at developing a similar approach to (full) intuitionistic linear logic using some fibred generalised multicategories. This is inspired by linear non-linear logic and by recent work by Martin Hyland and Christine Tasson on its multicategorical models.\n","date":1591111800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1591111800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://nicolas-blanco.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am a PhD student in the Theoretical Computer Science group at the University of Birmingham. My supervisors are Noam Zeilberger and Paul Levy. My research interests mainly involve category theory, logic and their applications.\nI graduated from the Master in Mathematical Logic and Foundations of Computer Science at the Paris Diderot University. During this period I did a five-month internship under the supervision of Benoît Valiron on the syntax and semantics of a linear probabilistic $\\lambda\\mu$-calculus.","tags":null,"title":"Nicolas Blanco","type":"authors"},{"authors":["Nicolas Blanco"],"categories":null,"content":"","date":1591111800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591111800,"objectID":"2d660ff869168eed82c2040208a56e3a","permalink":"https://nicolas-blanco.github.io/talk/mfps36/","publishdate":"2020-05-31T10:30:26+01:00","relpermalink":"/talk/mfps36/","section":"talk","summary":"Presenting the theory of bifibration of polycategories and its relation to classical multiplicative linear logic.","tags":["Polycategories","Linear logic","Bifibrations","Grothendieck construction","Frobenius monoids"],"title":"Bifibrations of polycategories and classical linear logic","type":"talk"},{"authors":["Nicolas Blanco","Noam Zeilberger"],"categories":[],"content":"","date":1590841734,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590841734,"objectID":"815cfd50b51d6bbdcf92adabe9a1a8e8","permalink":"https://nicolas-blanco.github.io/publication/polybifibrations/","publishdate":"2020-05-30T13:28:54+01:00","relpermalink":"/publication/polybifibrations/","section":"publication","summary":"*This is a paper presented at MFPS 2020. It has also been accepted for a keynote presentation at ACT 2020. This page contains an extended version of the paper, the final version of the MFPS proceedings and the extended abstract submitted to ACT. The extended version of the paper is still work in progress.* The main goal of this article is to expose and relate different ways of interpreting the multiplicative fragment of classical linear logic in polycategories. Polycategories are known to give rise to models of classical linear logic in so-called representable *-polycategories, which ask for the existence of various polymaps satisfying the different universal properties needed to define tensor, par, and negation. We begin by explaining how these different universal properties can all be seen as instances of a single notion of universality of a polymap parametrised by an input or output object, which also generalises the classical notion of universal multimaps in a multicategory. We then proceed to introduce a definition of in-cartesian and out-cartesian polymap relative to a refinement system (= strict functor) of polycategoriesm in such a way that universal polymaps can be understood as a special case. In particular, we obtain that a polycategory is a representable *-polycategory if and only if it is bifibred over the terminal polycategory. Finally, we present a Grothendieck correspondence between bifibrations of polycategories and pseudofunctors into MAdj, the 2-polycategory of multivariable adjunctions. When restricted to bifibrations over the terminal polycategory we get back the correspondence between *-autonomous categories and Frobenius pseudomonoids in MAdj that was recently observed by Shulman.","tags":["Polycategories","Linear Logic","Bifibrations","Grothendieck construction","Frobenius monoids"],"title":"Bifibrations of polycategories and classical linear logic","type":"publication"},{"authors":["Nicolas Blanco"],"categories":[],"content":"A quick compilation of facts about polycategories together with links to the appropriate litterature. Some are original work.\n Polycategories have been introduced by Szabo in 1975 in Polycategories. Polycategories are \u0026ldquo;categories with many-to-many morphisms\u0026rdquo;, i.e. polymaps have many inputs and many outputs. Polycategories correspond to Gentzen classical sequent calculus. Polycategories compose on one object. Composition of Polycategories is the cut rule. Representable polycategories, a.k.a. two-tensor polycategories, are linearly distributive categories, see Weakly distributive categories. In a polycategory, $\\otimes$, ⅋ and duality are characterised by universal properties. Representable polycategories with duals are called $\\ast$-representable. Polycategories bifibred over $\\ast$-representable one are $\\ast$-representable, see this paper. The terminal polycategory have one object $\\ast$ and one polymap $\\underline{(m,n)}$ for each arities. A Polycategory is $\\ast$-representable iff it is bifibred over the terminal one. Universal polymaps are the cartesian polymaps, w.r.t. the functor into the terminal Polycategory. Frobenius algebras are the generalised elements of polycategories. There is a Grothendieck correspondence for polycategories.  ","date":1568049923,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1568049923,"objectID":"e43de9eca29ae092aa79bead4cde06ba","permalink":"https://nicolas-blanco.github.io/post/polycategorical_clickbait/","publishdate":"2019-09-09T18:25:23+01:00","relpermalink":"/post/polycategorical_clickbait/","section":"post","summary":"A quick compilation of facts about polycategories together with links to the appropriate litterature. Some are original work.\n Polycategories have been introduced by Szabo in 1975 in Polycategories. Polycategories are \u0026ldquo;categories with many-to-many morphisms\u0026rdquo;, i.e. polymaps have many inputs and many outputs. Polycategories correspond to Gentzen classical sequent calculus. Polycategories compose on one object. Composition of Polycategories is the cut rule. Representable polycategories, a.k.a. two-tensor polycategories, are linearly distributive categories, see Weakly distributive categories.","tags":["Polycategory","Fibration"],"title":"14 Amazing Facts about Polycategories and their Fibrations","type":"post"},{"authors":["Nicolas Blanco"],"categories":null,"content":"","date":1567609200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567609200,"objectID":"17dc96a9c5afc2b97103ac1ed652c8b0","permalink":"https://nicolas-blanco.github.io/talk/syco5/","publishdate":"2019-09-04T15:00:00Z","relpermalink":"/talk/syco5/","section":"talk","summary":"Linearly distributives categories correspond to polycategories bifibred over the terminal polycategory.","tags":["Polycategory","Fibration","Linear Logic"],"title":"Classical linear logic via bifibrations of polycategories","type":"talk"},{"authors":[],"categories":[],"content":"Welcome to Slides Academic\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://nicolas-blanco.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"}]